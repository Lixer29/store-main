{"ast":null,"code":"import React,{createContext}from'react';import ReactDOM from'react-dom/client';import App from'./App';import UserStore from\"./store/userStore\";import DeviceStore from\"./store/deviceStore\";import{jsx as _jsx}from\"react/jsx-runtime\";export const Context=/*#__PURE__*/createContext(null);const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Context.Provider,{value:{user:new UserStore(),device:new DeviceStore()},children:/*#__PURE__*/_jsx(App,{})})}));","map":{"version":3,"names":["React","createContext","ReactDOM","App","UserStore","DeviceStore","jsx","_jsx","Context","root","createRoot","document","getElementById","render","StrictMode","children","Provider","value","user","device"],"sources":["D:/web/own-online-store/client/src/index.js"],"sourcesContent":["import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport UserStore from \"./store/userStore\";\nimport DeviceStore from \"./store/deviceStore\";\n\nexport const Context = createContext(null)\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <Context.Provider value={{\n          user: new UserStore(),\n          device: new DeviceStore()\n      }}>\n          <App />\n      </Context.Provider>\n  </React.StrictMode>\n);\n\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,aAAa,KAAO,OAAO,CAC1C,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,WAAW,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,MAAO,MAAM,CAAAC,OAAO,cAAGP,aAAa,CAAC,IAAI,CAAC,CAE1C,KAAM,CAAAQ,IAAI,CAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTN,IAAA,CAACP,KAAK,CAACc,UAAU,EAAAC,QAAA,cACbR,IAAA,CAACC,OAAO,CAACQ,QAAQ,EAACC,KAAK,CAAE,CACrBC,IAAI,CAAE,GAAI,CAAAd,SAAS,CAAC,CAAC,CACrBe,MAAM,CAAE,GAAI,CAAAd,WAAW,CAAC,CAC5B,CAAE,CAAAU,QAAA,cACER,IAAA,CAACJ,GAAG,GAAE,CAAC,CACO,CAAC,CACL,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}